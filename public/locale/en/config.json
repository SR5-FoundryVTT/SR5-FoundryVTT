{
    "CONTROLS": {
        "SR5": {
            "EnvironmentalModifiers": "Environmental Modifiers",
            "OverwatchScoreTracker": "Overwatch Score Tracker",
            "SituationalModifiers": "Situational Modifiers"
        }
    },
    "SETTINGS": {
        "ApplyLimitsDescription": "Should Limits be applied to rolls",
        "ApplyLimitsName": "Apply Limits to Rolls",
        "AutomateMultiDefenseModifier": "Automate defense modifier",
        "AutomateMultiDefenseModifierDescription": "Will automatically apply defense mod for multiple attacks",
        "AutomateProgressiveRecoil": "Automate progressive recoil",
        "AutomateProgressiveRecoilDescription": "Characters accrue progressive recoil until reset",
        "DefaultOpposedTestActorSelection": "Overwrite opposed test token selections",
        "DefaultOpposedTestActorSelectionDescription": "Always overwrite selected tokens with targets used for testing",
        "DiagonalMovementDescription": "How should diagonal movement be handled when using a grid",
        "DiagonalMovementName": "Diagonal Movement",
        "DisplayDefaultRollCardDescription": "Should the default roll-card be displayed along with the Shadowrun roll-card",
        "DisplayDefaultRollCardName": "Display Default Roll Card",
        "EstimateDiagonal": "Estimate Diagonal Movement (1-2-1)",
        "Euclidean": "Euclidean",
        "FreshColor": "Highlight with Text Color Only",
        "FreshColorAndIcon": "Highlight with Text Color and Icon",
        "FreshIcon": "Highlight with Icon Only",
        "HideGMOnlyChatContent": "Hide critical information on GM test",
        "HideGMOnlyChatContentDescription": "GM test messages will only show all information to players that own the used actor",
        "IgnoreDiagonal": "Ignore Diagonal Movement (1-1-1)",
        "ImportIconFolderDescription": "The folder where the importer can find icon files. Default location: 'systems/shadowrun5e/dist/icons/importer/'",
        "ImportIconFolderName": "Importer Icon Folder",
        "ManualRollOnSuccessTest": "Manual dice roll on any test",
        "ManualRollOnSuccessTestDescription": "Allow user to manually roll dice on tests and report back hits",
        "MarkImportsDescription": "Denote freshly imported items on actor sheets to highlight that they should be reviewed",
        "MarkImportsName": "Mark Fresh Imports",
        "MustHaveRessourcesOnTest": "Stop Tests with missing resources",
        "MustHaveRessourcesOnTestDescription": "Only allow actors with all necessary resources to roll a test",
        "NoMarking": "Don't Mark Fresh Imports",
        "OnlyAllowRollOnDefaultableSkills": "Only defaultable unknown skill rolls",
        "OnlyAllowRollOnDefaultableSkillsDescription": "When unset unknown skills can be rolled, even if they can't be defaulted.",
        "OnlyAutoRollNPCInCombat": "Only auto roll NPC initiative",
        "OnlyAutoRollNPCInCombatDescription": "When unset players must manually roll their init on each new pass / round",
        "ShowGlitchAnimationDescription": "Should display the animation as part of the glitch text on the roll card",
        "ShowGlitchAnimationName": "Display Glitch Animation",
        "ShowSkillsWithDetails": "Show more detailed skill lists",
        "ShowSkillsWithDetailsDescription": "When set skill list display will mirror core rulebook style (italics, short attributes)",
        "ShowTokenNameForChatOutputDescription": "Should the token name be used for roll card output instead of the actor name when available",
        "ShowTokenNameForChatOutputName": "Use Token Name for Roll Card",
        "TokenHealthBars": "Token health bars",
        "TokenHealthBarsDescription": "A full damage track will show as an empty health bar on a Token instead of mirroring",
        "TokenRulerColorRunning": "Token Movement Running Color",
        "TokenRulerColorRunningDescription": "The color for distance within running rate.",
        "TokenRulerColorSprinting": "Token Movement Sprinting Color",
        "TokenRulerColorSprintingDescription": "The color for distance above running rate, where sprinting is necessary.",
        "TokenRulerColorWalking": "Token Movement Walking Color",
        "TokenRulerColorWalkingDescription": "The color for distance within walking rate.",
        "TokenRulerOpacity": "Token Movement Opacity",
        "TokenRulerOpacityDescription": "How opaque the token ruler measurements are displayed. (0 = fully transparent, 1 = fully opaque)",
        "TokenUseRoutingLib": "Use RoutingLib",
        "UseDamageConditionDescription": "System marks tokens according to their condition monitor",
        "UseDamageConditionName": "Use system handling for token status effects",
        "UseImportIconOverridesDescription": "When importing items, use the same icons for some different item types when it makes sense. Uncheck if using custom icons.",
        "UseImportIconOverridesName": "Use Default Importer Icon Overrides"
    },
    "SR5": {
        "AP": "AP",
        "Accessory": "Accessory",
        "Accuracy": "Accuracy",
        "Action": "Action",
        "ActionCategory": {
            "Addiction": "Addiction Actions",
            "AddictionMental": "Mental Addiction",
            "AddictionPhysical": "Physical Addiction",
            "Attack": "Attack Actions",
            "AttackMatrix": "Attack Matrix",
            "AttackMelee": "Attack Melee",
            "AttackRanged": "Attack Ranged",
            "AttackThrown": "Attack Thrown",
            "BruteForce": "Matrix Brute Force",
            "Climbing": "Climbing Actions",
            "Compiling": "Compiling Actions",
            "ComplexForm": "Complex Form Actions",
            "Defense": "Defense Actions",
            "DefenseMatrix": "Defense Matrix",
            "DefenseSuppression": "Defense Suppression",
            "Drain": "Drain Actions",
            "Fade": "Fade Actions",
            "HackOnTheFly": "Matrix Hack on the Fly",
            "Magic": "Magic Actions",
            "Matrix": "Matrix Actions",
            "Recovery": "Recovery Actions",
            "RecoveryPhysical": "Recovery Physical",
            "RecoveryStun": "Recovery Stun",
            "Resist": "Resisting Actions",
            "ResistBiofeedback": "Resist Biofeedback",
            "ResistDisease": "Resisting Disease",
            "ResistMatrix": "Resist Matrix",
            "ResistToxin": "Resisting Toxin",
            "Resonance": "Resonance Actions",
            "Rigging": "Rigging Actions",
            "Social": "Social Actions",
            "SpellCombat": "Spellcasting Combat",
            "SpellDetection": "Spellcasting Detection",
            "SpellHealing": "Spellcasting Healing",
            "SpellIllusion": "Spellcasting Illusion",
            "SpellManipulation": "Spellcasting Manipulation",
            "SpellRitual": "Spellcasting Ritual",
            "Summoning": "Summoning Actions"
        },
        "ActionType": "Type",
        "ActionTypeComplex": "Complex",
        "ActionTypeFree": "Free",
        "ActionTypeNone": "None",
        "ActionTypeSimple": "Simple",
        "ActionTypeVaries": "Varies",
        "Actions": "Actions",
        "Active": "Active",
        "ActiveDefense": "Active Defense",
        "ActiveEffect": {
            "FIELDS": {
                "applyTo": {
                    "label": "Apply-To",
                    "hint": "Apply-To different Targets"
                },
                "applyByTest": {
                    "label": "Apply-To Test via Item"
                },
                "onlyForEquipped": {
                    "label": "Equipped Only",
                    "hint": "Apply for equipped item only"
                },
                "onlyForItemTest": {
                    "label": "Item Test Only",
                    "hint": "Apply for parent item test only"
                },
                "onlyForWireless": {
                    "label": "Wireless Only",
                    "hint": "Apply for wireless active only"
                },
                "selection_attributes": {
                    "label": "Attributes Filter",
                    "hint": "Filter the test based on Attributes used"
                },
                "selection_categories": {
                    "label": "Action Categories Filter",
                    "hint": "Filter the test based on Action Category used"
                },
                "selection_limits": {
                    "label": "Limits Filter",
                    "hint": "Filter the test based on the Limit used"
                },
                "selection_skills": {
                    "label": "Skills Filter",
                    "hint": "Filter the test based on the Skills used"
                },
                "selection_tests": {
                    "label": "Tests Filter",
                    "hint": "Filter the test based on the Tests used"
                }
            },
            "ApplyTo": "Apply-To",
            "ApplyTos": {
                "TargetedActor": "Targeted Actor",
                "TestItem": "Test via Item"
            },
            "CannotAddTestViaItemToActor": "Cannot add an Active Effect of type 'Test via Item' to an Actor",
            "Modes": {
                "Modify": "Modify"
            },
            "New": "New Effect"
        },
        "ActiveSkills": "Active Skills",
        "Actor": {
            "FIELDS": {
                "modifiers": {
                    "walk": {
                        "label": "Walk",
                        "hint": "Modifies walking distance by multiples of the agility attribute"
                    },
                    "run": {
                        "label": "Run",
                        "hint": "Modifies running distance by multiples of the agility attribute"
                    },
                    "physical_limit": {
                        "label": "Physical Limit",
                        "hint": "Modifies physical limit"
                    },
                    "astral_limit": {
                        "label": "Astral Limit",
                        "hint": "Modifies astral limit"
                    },
                    "social_limit": {
                        "label": "Social Limit",
                        "hint": "Modifies social limit"
                    },
                    "mental_limit": {
                        "label": "Mental Limit",
                        "hint": "Modifies mental limit"
                    },
                    "astral_initiative": {
                        "label": "Astral Initiative",
                        "hint": "Modifies astral initiative base"
                    },
                    "astral_initiative_dice": {
                        "label": "Astral Initiative Dice",
                        "hint": "Modifies astral initiative dice"
                    },
                    "matrix_initiative": {
                        "label": "Matrix Initiative",
                        "hint": "Modifies matrix initiative base"
                    },
                    "matrix_initiative_dice": {
                        "label": "Matrix Initiative Dice",
                        "hint": "Modifies matrix initiative dice"
                    },
                    "meat_initiative": {
                        "label": "Meatspace Initiative",
                        "hint": "Modifies physical initiative base"
                    },
                    "meat_initiative_dice": {
                        "label": "Meatspace Initiative Dice",
                        "hint": "Modifies physical initiative dice"
                    },
                    "stun_track": {
                        "label": "Stun Track",
                        "hint": "Modifies stun damage track"
                    },
                    "matrix_track": {
                        "label": "Matrix Track",
                        "hint": "Modifies matrix damage track"
                    },
                    "physical_track": {
                        "label": "Physical Track",
                        "hint": "Modifies physical damage track"
                    },
                    "physical_overflow_track": {
                        "label": "Physical Overflow Track",
                        "hint": "Modifies physical overflow damage track"
                    },
                    "wound_tolerance": {
                        "label": "Wound Tolerance",
                        "hint": "Modifies damage per wound modifier"
                    },
                    "pain_tolerance_stun": {
                        "label": "Pain Tolerance (Stun)",
                        "hint": "Modifies damage to be ignored before first wound modifier"
                    },
                    "pain_tolerance_physical": {
                        "label": "Pain Tolerance (Physical)",
                        "hint": "Modifies damage to be ignored before first wound modifier"
                    },
                    "armor": {
                        "label": "Armor",
                        "hint": "Modifies total armor value"
                    },
                    "multi_defense": {
                        "label": "Multi-Defense",
                        "hint": "Modifies defense tests pool for multiple defenses per combat turn"
                    },
                    "reach": {
                        "label": "Reach",
                        "hint": "Modifies reach of melee attacks"
                    },
                    "defense": {
                        "label": "Defense",
                        "hint": "Modifies defense tests pool"
                    },
                    "defense_dodge": {
                        "label": "Defense (Dodge)",
                        "hint": "Adds to the defense modifier for active dodging"
                    },
                    "defense_parry": {
                        "label": "Defense (Parry)",
                        "hint": "Adds to the defense modifier for active parrying"
                    },
                    "defense_block": {
                        "label": "Defense (Block)",
                        "hint": "Adds to the defense modifier for active blocking"
                    },
                    "defense_melee": {
                        "label": "Defense (Melee)",
                        "hint": "Adds to the defense modifier for melee defense"
                    },
                    "defense_ranged": {
                        "label": "Defense (Ranged)",
                        "hint": "Adds to the defense modifier for ranged attack"
                    },
                    "soak": {
                        "label": "Soak",
                        "hint": "Modifies physical damage resist tests pool"
                    },
                    "recoil": {
                        "label": "Recoil",
                        "hint": "Modifies recoil tests pool"
                    },
                    "drain": {
                        "label": "Drain",
                        "hint": "Modifies drain tests pool"
                    },
                    "fade": {
                        "label": "Fade",
                        "hint": "Modifies fade tests pool"
                    },
                    "essence": {
                        "label": "Essence",
                        "hint": "Modifies essence attribute"
                    },
                    "public_grid": {
                        "label": "Public Grid",
                        "hint": "Modifies the Public Grid modifier when connected to it"
                    },
                    "mark_damage": {
                        "label": "Mark Damage",
                        "hint": "Modifies the amount of damage taken per MARK done to you"
                    },
                    "place_two_marks": {
                        "label": "Place Two Marks",
                        "hint": "Modifies the modifier to place two marks at the same time"
                    },
                    "place_three_marks": {
                        "label": "Place Three Marks",
                        "hint": "Modifies the modifier to place three marks at the same time"
                    },
                    "composure": {
                        "label": "Composure",
                        "hint": "Modifies composure tests pool"
                    },
                    "lift_carry": {
                        "label": "Lift/Carry",
                        "hint": "Modifies lift&carry tests pool"
                    },
                    "judge_intentions": {
                        "label": "Judge Intentions",
                        "hint": "Modifies judge intentions tests pool"
                    },
                    "memory": {
                        "label": "Memory",
                        "hint": "Modifies memory tests pool"
                    },
                    "global": {
                        "label": "Global",
                        "hint": "Modifies all tests pool, excluding damage reducing tests"
                    }
                },
                "category_visibility": {
                    "default": {
                        "label": "Show Empty Categories",
                        "hint": "If empty Tabs and Inventory Categories should be visible"
                    }
                },
                "full_defense_attribute": {
                    "label": "Full Defense Attribute",
                    "hint": "Attribute to use when using the Full Defense interrupt action"
                },
                "magic": {
                    "label": "Magic",
                    "attribute": {
                        "label": "Drain Attribute",
                        "hint": "Attribute the Mage/Adept uses when resisting Drain"
                    }
                },
                "technomancer": {
                    "label": "Technomancer",
                    "attribute": {
                        "label": "Fade Attribute",
                        "hint": "Attribute the Technomancer uses when resisting Fade"
                    }
                },
                "special": {
                    "label": "Awakened/Emerged",
                    "hint": "Select if the character is Awakened (mage/adept) or Emerged (technomancer)"
                }
            }
        },
        "ActorTypes": {
            "Character": "Character",
            "Critter": "Critter",
            "IC": "IC",
            "Spirit": "Spirit",
            "Sprite": "Sprite",
            "Vehicle": "Vehicle"
        },
        "Add": "Add",
        "AddAmmo": "Add Ammo",
        "AddFifteenMinutesToOverwatch": "Roll 2d6 for 15 minutes in the matrix",
        "AddFiveToOverwatch": "+5 to OS",
        "AddMod": "Add Mod",
        "AddOneToOverwatch": "+1 to OS",
        "AddSkill": "Add Custom Skill",
        "AdeptPower": {
            "Types": {
                "Active": "Active",
                "Passive": "Passive"
            },
            "FIELDS": {
                "pp": {
                    "label": "Power Points",
                    "hint": "Number of Power Points this Power Costs"
                },
                "type": {
                    "label": "Power Type",
                    "hint": "Type of Adept Power"
                },
                "drain": {
                    "label": "Drain",
                    "hint": "If this Adept Power incurs Drain after use"
                },
                "level": {
                    "label": "Level",
                    "hint": "Level of this Adept Power (if applicable)"
                }
            }
        },
        "Agent": "Agent",
        "Ammo": {
            "label": "Ammo",
            "FIELDS": {
                "damage": {
                    "label": "Damage",
                    "hint": "Damage dealt by this ammo. This may be added to the Weapon's Damage or replace it"
                },
                "damageType": {
                    "label": "Damage type",
                    "hint": "Type of damage dealt by this Ammo."
                },
                "element": {
                    "label": "Element",
                    "hint": "Element the damage of this Element does."
                },
                "replaceDamage": {
                    "label": "Replace Damage",
                    "hint": "If this Ammo should replace the Damage of the weapon"
                },
                "ap": {
                    "label": "AP",
                    "hint": "Armor Penetration of this Ammo. This may be added to the Weapon's AP or replace it"
                },
                "replaceAP": {
                    "label": "Replace AP",
                    "hint": "If this Ammo should replace the AP of the Weapon"
                },
                "accuracy": {
                    "label": "Accuracy",
                    "hint": "Accuracy modifier of this Ammo"
                },
                "blast": {
                    "radius": {
                        "label": "Blast Radius",
                        "hint": "Blast Radius of this Ammo, in Meters"
                    },
                    "dropoff": {
                        "label": "Blast Dropoff",
                        "hint": "Blast Dropoff modifies the Damage per Meter"
                    }
                }
            }
        },
        "AmmoFull": "Ammo Full",
        "AmmoGelRounds": "Gel Rounds",
        "Aoe": "AoE",
        "ApplyWounds": "Apply Wounds",
        "Armor": {
            "label": "Armor",
            "FIELDS": {
                "armor": {
                    "value": {
                        "label": "Armor Value",
                        "hint": "Amount of Armor that this item provides"
                    },
                    "mod": {
                        "label": "Accessory",
                        "hint": "If this Armor is an Accessory (adds its value to the actor's base Armor)"
                    },
                    "hardened": {
                        "label": "Hardened Armor",
                        "hint": "If this Armor is Hardened"
                    },
                    "acid": {
                        "label": "Acid Resistance",
                        "hint": "Extra Armor against attacks with Acid"
                    },
                    "electricity": {
                        "label": "Nonconductivity",
                        "hint": "Extra Armor against attacks with Electricity"
                    },
                    "cold": {
                        "label": "Insulation",
                        "hint": "Extra Armor against attacks with Cold"
                    },
                    "fire": {
                        "label": "Fire Resistance",
                        "hint": "Extra Armor against attacks with Fire"
                    },
                    "radiation": {
                        "label": "Radiation Resistance",
                        "hint": "Extra Armor against attacks with Radiation"
                    }
                }
            }
        },
        "ArmorHardened": "Hardened",
        "ArmorHardenedFull": "Hardened Armor",
        "ArmorValue": "Armor Value",
        "Attacker": "Attacker",
        "AttackerHits": "Attacker Hits",
        "AttackerNetHits": "Attacker Net Hits",
        "AttrAgility": "Agility",
        "AttrBody": "Body",
        "AttrCharisma": "Charisma",
        "AttrEdge": "Edge",
        "AttrEssence": "Essence",
        "AttrIntuition": "Intuition",
        "AttrLogic": "Logic",
        "AttrMagic": "Magic",
        "AttrReaction": "Reaction",
        "AttrResonance": "Resonance",
        "AttrStrength": "Strength",
        "AttrWillpower": "Willpower",
        "Attribute": "Attribute",
        "Attributes": "Attributes",
        "Availability": "Avail",
        "Awakened": "Awakened",
        "AwakenedEmerged": "Awakened/Emerged",
        "Barrel": "Barrel",
        "Base": "Base",
        "BaseValue": "Base Value",
        "BiofeedbackDamage": "Biofeedback Damage",
        "Biography": "Bio",
        "BlastRadius": "Blast Radius",
        "Blitz": "Blitz",
        "Block": "Block",
        "Bonus": "Bonus",
        "Bonuses": "Bonuses",
        "Broken": "BROKEN",
        "Bullet": "Round",
        "BulletCount": "Bullet Count",
        "Bullets": "Rounds",
        "COMBAT": {
            "ReduceInitByFive": "Initiative -5",
            "ReduceInitByOne": "Initiative -1",
            "ReduceInitByTen": "Initiative -10"
        },
        "CallInAction": {
            "ActorType": "Actor Type",
            "Compilation": "Compilation",
            "CreateCompilation": "Create compilation action",
            "CreateSummoning": "Create summoning action",
            "Summoning": "Summoning",
            "FIELDS": {
                "spirit": {
                    "type": {
                        "label": "Spirit Type",
                        "hint": "Type of Spirit to Summon. Disabled if a Spirit Actor is set"
                    },
                    "force": {
                        "label": "Spirit Force",
                        "hint": "Force of Spirit to Summon. Disabled if a Spirit Actor is set"
                    }
                },
                "sprite": {
                    "type": {
                        "label": "Sprite Type",
                        "hint": "Type of Sprite to Compile. Disabled if a Sprite Actor is set"
                    },
                    "level": {
                        "label": "Sprite Force",
                        "hint": "Level of Sprite to Summon. Disabled if a Sprite Actor is set"
                    }
                }
            }
        },
        "CanDefault": "Can Default",
        "Capacity": "Capacity",
        "CareerKarma": "Career Karma",
        "ChangelogApplication": {
            "Changelog": "Check out our GitHub for new features and fixes",
            "IssuesOverview": "Issues Overview",
            "LatestChangelog": "Latest Changelog",
            "Reason": "You've updated to the latest version!",
            "ReportIssues": "Please report bugs and feature requests",
            "Title": "Shadowrun5e Update"
        },
        "Character": {
            "FIELDS": {
                "metatype": {
                    "label": "Metatype",
                    "hint": "Metatype of the Character. If an NPC, this will adjust attributes"
                },
                "nuyen": {
                    "label": "Nuyen",
                    "hint": "Amount of Nuyen this Character has"
                },
                "karma": {
                    "value": {
                        "label": "Current Karma",
                        "hint": "Amount of Karma this Character has available"
                    },
                    "max": {
                        "label": "Career Karma",
                        "hint": "Amount of Karma this Character has accumulated"
                    }
                },
                "notoriety": {
                    "label": "Notoriety",
                    "hint": "The negative side of the character’s reputation"
                },
                "public_awareness": {
                    "label": "Public Awareness",
                    "hint": "How well the character is known among the media, authorities, and public at large"
                },
                "street_cred": {
                    "label": "Street Cred",
                    "hint": "A character’s lifetime accomplishments"
                },
                "matrix_full_defense_attribute": {
                    "label": "Matrix Full Defense Attribute",
                    "hint": "Attribute to add when making a Matrix Full Defense Action"
                },
                "is_critter": {
                    "label": "Is Critter",
                    "hint": "Allow the use of critter powers"
                },
                "is_npc": {
                    "label": "Is NPC",
                    "hint": "Mark actor as NPC to get additional features"
                },
                "npc": {
                    "is_grunt": {
                        "label": "Is Grunt",
                        "hint": "Apply grunt rules to this actor"
                    }
                }
            },
            "Modifiers": {
                "NPCMetatypeAttribute": "NPC Metatype Attribute"
            },
            "Types": {
                "Dwarf": "Dwarf",
                "Elf": "Elf",
                "Human": "Human",
                "Ork": "Ork",
                "Troll": "Troll"
            }
        },
        "ClearMarks": "Clear All Marks",
        "Close": "Close",
        "Collapse": "Collapse",
        "CollapseAll": "Collapse All",
        "CommonProgram": "Common Program",
        "CompendiaSettings": {
            "Description": "These packs will be used for the system. You can override them with your own packs, but you should not remove them.",
            "Label": "Compendium Packs",
            "Title": "System compendiums",
            "GeneralActionsPack": {
                "label": "General Actions",
                "hint": "This compendium will be used for all general, attribute only actions."
            },
            "MatrixActionsPack": {
                "label": "Matrix Actions",
                "hint": "This compendium will be used for all matrix actions."
            },
            "ICActionsPack": {
                "label": "IC Actions",
                "hint": "This compendium will be used for IC actions, filtered for each IC type"
            }
        },
        "Compendiums": {
            "sr5critter": "Critters & Spirits & Sprites",
            "sr5drone": "Drones & Vehicles",
            "sr5gear": "Armors & Gears",
            "sr5trait": "Quality & Powers",
            "sr5magic": "Spell & Complex Forms",
            "sr5modification": "Modifications",
            "sr5ware": "Bioware & Cyberware",
            "sr5weapon": "Weapons",
            "Folders": {
                "Root": "SR5e Imports"
            }
        },
        "Compilation": {
            "DropSprite": "Drop Sprite",
            "FixedSprite": "Prep. Sprite",
            "SpriteType": "Sprite Type"
        },
        "ComplexForm": "Complex Form",
        "ComplexForms": "Complex Forms",
        "Conceal": "Conceal",
        "ConditionMonitor": "Con. Mon.",
        "Connection": "Connection",
        "Contact": {
            "Blackmail": "Blackmail",
            "Connection": "Connection",
            "DropActor": "Drag&Drop an actor to link it to this contact",
            "Family": "Family",
            "Group": "Group",
            "LinkedActor": "Actor",
            "Loyalty": "Loyalty",
            "Type": "Type"
        },
        "ContactType": "Type",
        "Contacts": "Contacts",
        "Continue": "Continue",
        "Content": {
            "Actions": {
                "Armor": "Armor",
                "Biofeedback Resist": "Biofeedback Resist",
                "BruteForce": "Brute Force",
                "ChangeConfiguration": "Change Configuration",
                "ChangeIcon": "Change Icon",
                "CheckOverwatchScore": "Check Overwatch Score",
                "Composure": "Composure",
                "ControlDevice": "Control Device",
                "CrackFile": "Crack File",
                "CrackProgramme": "Crack Programme",
                "DataSpike": "Data Spike",
                "DisarmDatabomb": "Disarm Databomb",
                "Drain": "Drain",
                "DroneInfiltration": "Drone Infiltration",
                "DronePerception": "Drone Perception",
                "DronePilotVehicle": "Drone Pilot Vehicle",
                "EditFile": "Edit File",
                "EnterexitHost": "Enter/Exit Host",
                "EraseMark": "Erase Mark",
                "EraseMatrixSignature": "Erase Matrix Signature",
                "Fade": "Fade",
                "FormatDevice": "Format Device",
                "FullMatrixDefense": "Full Matrix Defense",
                "GridHop": "Grid Hop",
                "HackOnTheFly": "Hack On The Fly",
                "Hide": "Hide",
                "InviteMark": "Invite Mark",
                "JackOut": "Jack Out",
                "JamSignals": "Jam Signals",
                "JudgeIntentions": "Judge Intentions",
                "JumpIntoRiggedDevice": "Jump Into Rigged Device",
                "LiftCarry": "Lift Carry",
                "MatrixDamageResist": "Matrix Damage Resist",
                "MatrixDefenseTest": "Matrix Defense Test",
                "MatrixPerception": "Matrix Perception",
                "MatrixSearch": "Matrix Search",
                "Memory": "Memory",
                "NaturalRecoveryPhysical": "Natural Recovery Physical",
                "NaturalRecoveryStun": "Natural Recovery Stun",
                "PhysicalDamageResist": "Physical Damage Resist",
                "PhysicalDefense": "Physical Defense",
                "RebootDevice": "Reboot Device",
                "SendMessage": "Send Message",
                "SetDatabomb": "Set Databomb",
                "Snoop": "Snoop",
                "SpoofCommand": "Spoof Command",
                "SwitchInterfaceMode": "Switch Interface Mode",
                "TraceIcon": "Trace Icon"
            }
        },
        "ControlRig": "Control Rig",
        "Cost": "Cost",
        "Cover": "Cover",
        "Create": "Create {type}",
        "CritterPower": {
            "FIELDS": {
                "optional": {
                    "label": "Optional",
                    "hint": "If the Critter Power is Optional"
                },
                "powerType": {
                    "label": "Power Type",
                    "hint": "The Type of Critter Power"
                },
                "duration": {
                    "label": "Duration",
                    "hint": "Duration of the Critter Power"
                },
                "range": {
                    "label": "Range",
                    "hint": "Range of the Critter Power"
                },
                "karma": {
                    "label": "Karma",
                    "hint": "Karma cost of the Critter Power"
                }
            },
            "Categories": {
                "Drake": "Drake",
                "Echoes": "Echoes",
                "Emergent": "Emergent",
                "FreeSpirit": "Free Spirit",
                "Mundane": "Mundane",
                "Paranormal": "Paranormal",
                "ParanormalInfected": "Paranormal/Infected",
                "Shapeshifter": "Shapeshifter",
                "Weakness": "Weakness"
            },
            "Category": "Category",
            "Duration": "Duration",
            "Durations": {
                "Always": "Always",
                "Instant": "Instant",
                "Permanent": "Permanent",
                "Special": "Special",
                "Sustained": "Sustained"
            },
            "IsOptional": "Optionality",
            "Karma": "Karma",
            "Optional": {
                "DisabledOption": "Optional, disabled",
                "EnabledOption": "Optional, enabled",
                "Standard": "By default"
            },
            "Range": "Range",
            "Ranges": {
                "LineOfSight": "Line Of Sight",
                "LineOfSightArea": "Line Of Sight (A)",
                "Self": "Self",
                "Special": "Special",
                "Touch": "Touch"
            },
            "Type": "Type",
            "Types": {
                "Mana": "Mana",
                "Physical": "Physical"
            }
        },
        "Cyberware": "Cyberware",
        "CyberwareGrade": "Grade",
        "CyberwareGradeAlpha": "Alphaware",
        "CyberwareGradeBeta": "Betaware",
        "CyberwareGradeDelta": "Deltaware",
        "CyberwareGradeGamma": "Gammaware",
        "CyberwareGradeGrey": "Greyware",
        "CyberwareGradeStandard": "Standard",
        "CyberwareGradeUsed": "Used",
        "DIALOG": {
            "MissingModuleContent": "In order for source PDFs to be shown, the pdf-pager module must be installed and a PDF matching the code created."
        },
        "DP": "DP",
        "DV": "DV",
        "Damage": "Damage",
        "DamageApplication": {
            "ApplyDamage": "Apply Damage",
            "ApplyUnmodifiedDamage": "Apply Unmod. Damage",
            "Title": "Damage Application"
        },
        "DamageReplace": "Replace Damage",
        "DamageType": "Type",
        "DamageValue": "Damage Value",
        "DefaultCategoryVisibility": "Show empty categories",
        "Defaulting": "Defaulting",
        "Defender": "Defender",
        "DefenderNetHits": "Defender Net Hits",
        "Defense": "Defense",
        "DefenseTest": "Defense Test",
        "Del": "Del",
        "DeleteAmmo": "Delete Ammo",
        "DeleteConfirmationApplication": {
            "Cancel": "No",
            "Consent": "Are you sure?",
            "Delete": "Yes",
            "Description": "Deleting an item can't be reversed!",
            "Title": "Delete item   "
        },
        "DeleteItem": "Delete Item",
        "DeleteLicense": "Delete License",
        "DeleteMod": "Delete Mod",
        "DeleteSkill": "Delete Skill",
        "Description": "Description",
        "Descriptors": "Descriptors",
        "Details": "Details",
        "DetectionSpellExtended": "Extended",
        "Device": "Device",
        "DeviceCatCommlink": "Commlink",
        "DeviceCatCyberdeck": "Cyberdeck",
        "DeviceCatRCC": "Rigger Command Console",
        "DeviceType": "Type",
        "Dialogs": {
            "Common": {
                "Cancel": "Cancel"
            },
            "RangedWeaponTest": {
                "EnvironmentalOverwriteSet": "Environmental modifiers have been manually set to a fixed value!"
            }
        },
        "DicePool": "Pool",
        "DicePoolModifier": "Dice Pool Mod",
        "DirectConnection": "Direct Connection",
        "DmgTypeMatrix": "Matrix",
        "DmgTypePhysical": "Physical",
        "DmgTypeStun": "Stun",
        "Dodge": "Dodge",
        "DontApplyWounds": "Don't Apply Wounds",
        "Drain": "Drain",
        "DrainAttribute": "Drain Attribute",
        "DrainValue": "Drain Value",
        "Dropoff": "Dropoff",
        "DuckOrCover": "Duck or Cover",
        "Duration": "Duration",
        "DurationInstant": "Instant",
        "DurationPermanent": "Permanent",
        "DurationSustained": "Sustained",
        "Echo": "Echo",
        "Echoes": "Echoes",
        "EditAmmo": "Edit Ammo",
        "EditItem": "Edit Item",
        "EditMod": "Edit Mod",
        "EditSkill": "Edit Skill",
        "Effect": "Effect",
        "Effects": "Effects",
        "Element": "Element",
        "ElementAcid": "Acid",
        "ElementCold": "Cold",
        "ElementElectricity": "Electricity",
        "ElementFire": "Fire",
        "ElementRadiation": "Radiation",
        "Emerged": "Emerged",
        "EnvModifiersApplication": {
            "ClearModifiers": "Clear personal modifiers",
            "Extreme": "Combination of two or more conditions at the heavy level",
            "LightGlare": {
                "Good": "Full Light/No Glare",
                "Heavy": "Total Darkness/Blinding Glare",
                "Light": "Partial Light/Weak Glare",
                "Moderate": "Dim Light/Moderate Glare",
                "Title": "Light/Glare"
            },
            "Modifier": {
                "Title": "Modifier"
            },
            "Range": {
                "Good": "Short",
                "Heavy": "Extreme",
                "Light": "Medium",
                "Moderate": "Long",
                "Title": "Range"
            },
            "Title": "Environmental Modifiers",
            "Total": "Result",
            "Visibility": {
                "Good": "Clear",
                "Heavy": "Heavy Rain/Fog/Smoke",
                "Light": "Light Rain/Fog/Smoke",
                "Moderate": "Moderate Rain/Fog/Smoke",
                "Title": "Visibility"
            },
            "Wind": {
                "Good": "None or Light Breeze",
                "Heavy": "Strong Winds",
                "Light": "Light Winds",
                "Moderate": "Moderate Winds",
                "Title": "Wind"
            }
        },
        "EnvironmentHigh": "High",
        "EnvironmentLow": "Low",
        "EnvironmentMedium": "Medium",
        "EnvironmentModifier": "Environ. Mod",
        "EnvironmentNone": "None",
        "EnvironmentVeryHigh": "Very High",
        "Equip": "Equip",
        "Equipment": "Equipment",
        "Equipped": "Equipped",
        "Errors": {
            "CantConnectICToGrid": "IC actors can't be connected to a grid network",
            "CantConnectToPAN": "Given document can't be added to PAN network",
            "CantConnectToWAN": "Given document can't be added to WAN network",
            "CantEditAppliedItemEffects": "You can't edit an active effect that's been applied by an item.",
            "DefaultInventoryCantBeRemoved": "The default inventory can't be removed",
            "InventoryAlreadyExists": "An inventory with this name already exists.",
            "KeyNotModifyableByActiveEffect": "The active effect mode 'modify' can only affect mod properties.",
            "MarkCouldNotBePlaced": "Internal Error: Your marks couldn't be placed.",
            "MarksCantBePlacedBy": "Only personas can place marks.",
            "MarksCantBePlacedOn": "The chosen actor type can't receive any marks.",
            "MarksCantBePlacedWithoutPersona": "The chosen actor doesn't have an active persona.",
            "MasterDeviceIsMissing": "The master device is missing. Falling back to local device values.",
            "MissingSkill": "The actor doesn't have the requested skill.",
            "NoAvailableActorFound": "No available actor was found for this action",
            "SkillWithoutAttribute": "The skill has no attribute configured.",
            "TestExpectsVehicleOnly": "This test can only be made with a vehicle type actor",
            "TooManyActionsWithCategory": "You should have exactly one action with the category {category} on your actor"
        },
        "EssenceCost": "Essence",
        "Expand": "Expand",
        "ExpandAll": "Expand All",
        "Extend": "Extend",
        "Extended": "Extended",
        "ExtendedHits": "Extended Hits",
        "ExtendedTest": "Extended Test",
        "FOUNDRY": {
            "Actor": "Actor",
            "Item": "Item",
            "Scene": "Scene",
            "Token": "Token"
        },
        "Fade": "Fade",
        "FadeAttribute": "Fade Attribute",
        "FadeValue": "Fade Value",
        "Filter": "Filter",
        "FireMode": "Fire Mode",
        "Force": "Force",
        "FullDefense": "Full Defense",
        "FullMatrixDefense": "Full Matrix Defense",
        "FullDefenseAttribute": "Full Defense Attribute",
        "GMRequest": {
            "General": "Your GM wants you to do a",
            "RollAttribute": "Attribute Check",
            "RollSkill": "Skill Check",
            "Teamwork": "Teamwork Test",
            "Threshold": " with a threshold of "
        },
        "Gear": "Gear",
        "Glitch": "Glitch!",
        "GlitchCritical": "Critical Glitch!",
        "Glitches": "Glitches:",
        "GoodCover": "Good Cover",
        "Grids": "Grids",
        "HackingProgram": "Hacking Program",
        "Help": "Help",
        "Hits": "Hits",
        "Host": {
            "Attributes": "Host Attributes",
            "CustomAttributes": "Custom Attributes",
            "DropICActor": "Drag&Drop an IC actor in order of security response",
            "ICOrder": "IC Order",
            "MissingIC": "Missing IC",
            "Rating": "Host Rating"
        },
        "Hosts": "Hosts",
        "HotSim": "Hot Sim",
        "IC": {
            "FIELDS": {
                "icType": {
                    "label": "IC Type",
                    "hint": "Type of IC"
                },
                "host": {
                    "label": "Host",
                    "hint": "Type of IC",
                    "rating": {
                        "label": "Rating",
                        "hint": "Rating of the Host we are running on"
                    }
                }
            },
            "MissingHost": "Drag&Drop a host item",
            "Type": "Type",
            "Types": {
                "Acid": "Acid",
                "Binder": "Binder",
                "BlackIC": "Black IC",
                "Blaster": "Blaster",
                "Bloodhound": "Bloodhound",
                "BlueGoo": "Bloo Goo",
                "Catapult": "Catapult",
                "Crash": "Crash",
                "Flicker": "Flicker",
                "Jammer": "Jammer",
                "Killer": "Killer",
                "Marker": "Marker",
                "Patrol": "Patrol",
                "Probe": "Probe",
                "Scramble": "Scramble",
                "Shocker": "Shocker",
                "Sleuther": "Sleuther",
                "Sparky": "Sparky",
                "TarBaby": "Tar Baby",
                "Track": "Track"
            }
        },
        "Import": {
            "Spirit": {
                "SpiritTypeNotFound": "The spirit type was not found. Please open a github issue with your chummer export json."
            }
        },
        "ImportCharacter": "Import Character",
        "Incoming": "Incoming",
        "IncomingDamage": "Incoming Damage",
        "IncomingDrain": "Incoming Drain",
        "IncomingFade": "Incoming Fade",
        "Information": "Info",
        "Infos": {
            "CantModifyHostContent": "Can't change host data from within an IC actor.",
            "ConsumedEquippedAmmo": "Consumed rounds from equipped ammunition",
            "ResetProgressiveRecoil": "Reset progressive recoil to zero bullets fired"
        },
        "InitCatAstral": "Astral",
        "InitCatMatrix": "Matrix",
        "InitCatMeatspace": "Meatspace",
        "Initiation": "Initiation",
        "Initiative": "Initiative",
        "Internal": "Internal",
        "IsCritter": "Critter",
        "IsFreshImport": "This item was imported from Chummer and needs manual review.",
        "IsGrunt": "Grunt",
        "IsNPC": "NPC",
        "Item": {
            "FIELDS": {
                "action": {
                    "categories": {
                        "label": "Categories",
                        "hint": "Action Categories that this test incorporates. These actions can be targeted with Active Effects"
                    },
                    "modifiers": {
                        "label": "Modifiers",
                        "hint": "Action Modifiers that affect this test."
                    },
                    "test": {
                        "label": "Test Type",
                        "hint": "Specific type of test to use for this Action"
                    },
                    "type": {
                        "label": "Action Type",
                        "hint": "Type of action that this skill uses"
                    },
                    "extended": {
                        "label": "Extended Test",
                        "hint": "If this is an Extended Test"
                    },
                    "skill": {
                        "label": "Skill",
                        "hint": "Skill used by this action. Leave blank if no skill is used"
                    },
                    "spec": {
                        "label": "Specialization",
                        "hint": "If the skill specialization modifier should be applied to this action"
                    },
                    "attribute": {
                        "label": "Attribute",
                        "hint": "The Attribute used by the test"
                    },
                    "attribute2": {
                        "label": "Other Attribute",
                        "hint": "The Other Attribute used by this test"
                    },
                    "armor": {
                        "label": "Armor",
                        "hint": "If the actor's Armor should be added to the test"
                    },
                    "mod": {
                        "label": "Modifier",
                        "hint": "Any modifiers applied to the test"
                    },
                    "damage": {
                        "type": {
                            "base": {
                                "label": "Damage Type",
                                "hint": "Type of Damage that this action does"
                            }
                        },
                        "base": {
                            "label": "Base Damage",
                            "hint": "The base amount of Damage that this action does"
                        },
                        "base_formula_operator": {
                            "label": "Operator",
                            "hint": "How the Damage base value should affect the Attribute"
                        },
                        "attribute": {
                            "label": "Damage Attribute",
                            "hint": "Attribute to use with the Damage calculation"
                        },
                        "biofeedback": {
                            "label": "Biofeedback",
                            "hint": "If this action deals Biofeedback damage as well. This can be targeted with Active Effects"
                        },
                        "element": {
                            "base": {
                                "label": "Element",
                                "hint": "The Element the type of damage is. Leave blank for no element."
                            }
                        },
                        "ap": {
                            "base": {
                                "label": "AP",
                                "hint": "Armor Penetration of the Damage"
                            },
                            "base_formula_operator": {
                                "label": "Operator",
                                "hint": "How the AP base value should affect the Attribute"
                            },
                            "attribute": {
                                "label": "AP Attribute",
                                "hint": "Attribute to use with the AP calculation"
                            }
                        }
                    },
                    "limit": {
                        "base": {
                            "label": "Limit Value",
                            "hint": "Limit value used for the test. This is added if a specific limit is selected"
                        },
                        "attribute": {
                            "label": "Limit",
                            "hint": "The Specific Limit on the Actor used for the test."
                        }
                    },
                    "threshold": {
                        "base": {
                            "label": "Threshold Value",
                            "hint": "The Threshold that the test needs to reach"
                        }
                    },
                    "roll_mode": {
                        "label": "Roll Mode",
                        "hint": "The Roll Mode of the test. Leave blank if it should use the user-selected Roll Mode"
                    },
                    "opposed": {
                        "test": {
                            "label": "Opposed Test",
                            "hint": "The Test that the target of the action needs to take"
                        },
                        "skill": {
                            "label": "Skill",
                            "hint": "Skill used by Opposed Test. Leave blank if no skill is used"
                        },
                        "attribute": {
                            "label": "Attribute",
                            "hint": "The Attribute used by the Opposed Test"
                        },
                        "attribute2": {
                            "label": "Other Attribute",
                            "hint": "The Other Attribute used by this Opposed Test"
                        },
                        "armor": {
                            "label": "Armor",
                            "hint": "If the actor's Armor should be added to the Opposed Test"
                        },
                        "mod": {
                            "label": "Modifier",
                            "hint": "Any modifiers applied to the Opposed Test"
                        },
                        "resist": {
                            "test": {
                                "label": "Resist Test",
                                "hint": "Test the target takes to resist damage after the Opposed Test"
                            },
                            "attribute": {
                                "label": "Attribute",
                                "hint": "The Attribute used by the Resist Test"
                            },
                            "attribute2": {
                                "label": "Other Attribute",
                                "hint": "The Other Attribute used by this Resist Test"
                            },
                            "armor": {
                                "label": "Armor",
                                "hint": "If the actor's Armor should be added to the Resist Test"
                            }
                        }
                    }
                },
                "grade": {
                    "label": "Grade",
                    "hint": "Grade of the Cyberware/Bioware"
                },
                "essence": {
                    "label": "Essence",
                    "hint": "Essence cost of the Cyberware/Bioware"
                },
                "capacity": {
                    "label": "Capacity",
                    "hint": "Capacity of the Cyberware/Bioware"
                },
                "technology": {
                    "rating": {
                        "label": "Rating",
                        "hint": "The Device Rating of the item, this factors into matrix actions."
                    },
                    "quantity": {
                        "label": "Quantity",
                        "hint": "The amount of items this Item represents"
                    },
                    "conceal": {
                        "base" : {
                            "label": "Conceal",
                            "hint": "How hidden this device is to other people"
                        }
                    }
                }
            }
        },
        "ItemMod": "Item Mod",
        "ItemName": "Item Name",
        "ItemTypes": {
            "Action": "Action",
            "AdeptPower": "Adept Power",
            "Ammo": "Ammo",
            "Armor": "Armor",
            "Bioware": "Bioware",
            "ComplexForm": "Complex Form",
            "Contact": "Contact",
            "CritterPower": "Critter Power",
            "Cyberware": "Cyberware",
            "Device": "Device",
            "Echo": "Echo",
            "Equipment": "Equipment",
            "Gear": "Gear",
            "Grid": "Grid",
            "Host": "Host",
            "License": "License",
            "Lifestyle": "Lifestyle",
            "Metamagic": "Metamagic",
            "Modification": "Modification",
            "Program": "Program",
            "Quality": "Quality",
            "Ritual": "Ritual",
            "Sin": "SIN",
            "Spell": "Spell",
            "SpritePower": "Sprite Power",
            "Weapon": "Weapon"
        },
        "Karma": "Karma",
        "Keybinding": {
            "HideTestDialog": {
                "Hint": "Skip dialog when rolling tests from any button",
                "Label": "Hide Test Dialog"
            },
            "OverwatchScoreTracker": {
                "Hint": "Open overwatch score tracker",
                "Label": "Overwatch Score Tracker"
            },
            "ShowItemCard": {
                "Hint": "Only show item card in chat instead of rolling test",
                "Label": "Show Item Card"
            },
            "ShowSituationModifiers": {
                "Hint": "Open situation modifiers for selection",
                "Label": "Situation Modifiers"
            },
            "SuccessTestPrompt": {
                "Hint": "Prompt to make a standard Success Test",
                "Label": "Prompt Success Test"
            }
        },
        "KnockedDown": "Knocked Down",
        "KnowledgeSkillAcademic": "Academic",
        "KnowledgeSkillInterests": "Interests",
        "KnowledgeSkillProfessional": "Professional",
        "KnowledgeSkillStreet": "Street",
        "Labels": {
            "Action": {
                "ActiveTest": "Test",
                "Category": "Category",
                "DamageResistanceTest": "Damage Resistance Test",
                "ForceReboot": "Force Reboot",
                "Modifier": "Modifier",
                "Modifiers": "Modifiers",
                "OpposedTest": "Opposed Test",
                "SpiritType": "Spirit Type",
                "SpriteType": "Sprite Type"
            },
            "Actions": {
                "BruteForce": "Brute Force",
                "HackontheFly": "Hack on the Fly"
            },
            "ActorSheet": {
                "AddNetwork": "Direct Connect Network",
                "AddOneMark": "Add One Mark",
                "Compilations": "Compilations",
                "CreateInventory": "Create inventory place",
                "CritterPowers": "Critter Powers",
                "ColdSim": "Cold Sim",
                "ConnectToDriver": "Connect To Driver",
                "DisplayingPersona": "Displaying Persona",
                "DeviceRating": "Device Rating",
                "DeviceSetup": "Device Setup",
                "DisabledOptionCritterPowers": "Optional Critter Powers - Disabled",
                "DisabledOptionSpritePowers": "Optional Sprite Powers - Disabled",
                "EnabledOptionCritterPowers": "Optional Critter Powers - Enabled",
                "EnabledOptionSpritePowers": "Optional Sprite Powers - Enabled",
                "Hacking": "Hacking",
                "ICConfiguration": "IC Configuration",
                "Icons": "Icons",
                "MarkedIcons": "Marked Icons",
                "MarkNetwork": "Mark Network",
                "Matrix": "Matrix",
                "MatrixActions": "Matrix Actions",
                "Network": "Network",
                "NoNetwork": "No Network",
                "Persona": "Persona",
                "Offline": "Offline",
                "OpenSourceDocument": "Open Source",
                "OwnedIcons": "Owned Icons",
                "PersonalInventory": "On Person",
                "RemoveOneMark": "Remove One Mark",
                "ResetActorForNewRun": "New Run Reset",
                "Rituals": "Rituals",
                "RollDroneInfiltration": "Drone Infiltration",
                "RollDronePerception": "Drone Perception",
                "RollPilotVehicleTest": "Pilot Vehicle",
                "SetMonitor": "Monitor must be set manually.",
                "SetupPAN": "Add Devices to PAN",
                "Spells": "Spells",
                "SpiritConfiguration": "Spirit Configuration",
                "SpriteConfiguration": "Sprite Configuration",
                "SpritePowers": "Sprite Powers",
                "TestKBoardModifiers": "{skip}: skip dialog. {descr}: show only description.",
                "VehicleConfiguration": "Vehicle Configuration"
            },
            "Inventory": {
                "All": "All",
                "Carried": "Carried",
                "OpenInventory": "Inventory"
            },
            "MarkPlacement": {
                "PlaceOnDevice": "Place on device",
                "PlaceOnMainIcon": "Place on persona/host"
            },
            "Matrix": {
                "TargetMainIcon": "Target Main Icon",
                "TargetDevice": "Target Device",
                "Local": "Local",
                "Global": "Global",
                "Public": "Public"
            },
            "Message": {
                "ClickToSelect": "Click to select on scene",
                "OverwatchConvergence": "Overwatch Convergence",
                "TargetedIcon": "Targeted Icon",
                "TestEffects": "Applied effects",
                "FailedAttackAction": "Failed a Matrix Attack Action"
            },
            "Sheet": {
                "AddOne": "Add One",
                "ClearNetwork": "Clear network from all devices",
                "ItemEffects": "Item Effects",
                "MissingNetworkDevices": "Drag&Drop a network device to add it",
                "NetworkDevices": "Networked Devices",
                "PAN": "PAN",
                "RebootDevice": "Reboot",
                "SubtractOne": "Subtract One",
                "Type": "Type",
                "Visible": "Visible",
                "WAN": "WAN"
            },
            "Sidebar": {
                "Changelog": "Changelog",
                "Issues": "Issues",
                "Wiki": "Wiki"
            }
        },
        "Languages": "Languages",
        "LastRoll": "Last Prompted Roll",
        "Level": "Level",
        "License": "License",
        "Licenses": "Licenses",
        "Lifestyle": {
            "label": "Lifestyle",
            "FIELDS": {
                "type": {
                    "label": "Lifestyle Type",
                    "hint": "Type of Lifestyle"
                },
                "cost": {
                    "label": "Lifestyle Cost",
                    "hint": "Cost of the Lifestyle per month"
                },
                "comforts": {
                    "label": "Comforts",
                    "hint": "Comforts level of the Lifestyle"
                },
                "security": {
                    "label": "Security",
                    "hint": "Security level of the Lifestyle"
                },
                "neighborhood": {
                    "label": "Neighborhood",
                    "hint": "Neighborhood level of the Lifestyle"
                },
                "guests": {
                    "label": "Guests",
                    "hint": "Guests staying in the same Lifestyle"
                },
                "permanent": {
                    "label": "Permanent",
                    "hint": "If this Lifestyle is a Permanent Lifestyle"
                }
            }
        },
        "LifestyleComforts": "Comforts",
        "LifestyleGuests": "Guests",
        "LifestyleHigh": "High",
        "LifestyleLow": "Low",
        "LifestyleLuxory": "Luxury",
        "LifestyleMiddle": "Medium",
        "LifestyleNeighborhood": "Neighborhood",
        "LifestyleOther": "Other",
        "LifestyleSecurity": "Security",
        "LifestyleSquatter": "Squatter",
        "LifestyleStreet": "Street",
        "LifestyleType": "Type",
        "Lifestyles": "Lifestyles",
        "Limit": "Limit",
        "LimitAstral": "Astral",
        "LimitMental": "Mental",
        "LimitPhysical": "Physical",
        "LimitSocial": "Social",
        "LivingPersona": "Living Persona",
        "Load": "Load",
        "Loaded": "Loaded",
        "Loyalty": "Loyalty",
        "MIGRATION": {
            "BeginMigration": "Begin Migration",
            "BeginNotification": "Beginning Shadowrun system migration from version",
            "DoNotCloseNotification": "Please do not close your game or shut down FoundryVTT.",
            "SuccessConfirm": "Close",
            "SuccessDescription": "Existing compendium packs belonging to this world have been updated in the process of this migration.",
            "SuccessHeader": "Migration Complete",
            "SuccessNotification": "Shadowrun system successfully migrated to version",
            "SuccessPacksInfo": "Due to current technical limitations within FoundryVTT, actor packs must be updated manually.",
            "SuccessTitle": "Success",
            "WarningBackup": "If you have not backed up your world, do so before you press the 'Begin Migration' button below.",
            "WarningDescription": "Only the GM can perform the update and shutting down the server or closing your browser while the update is in progress may cause irreparable damage to your world.",
            "WarningHeader": "Migration Warning",
            "WarningRequired": "The Shadowrun 5E system must begin a required update.",
            "WarningTitle": "Alert"
        },
        "Magic": "Magic",
        "ManualGlitches": "Man. Glitches",
        "ManualHits": "Man. Hits",
        "ManualOverride": "Manual Override",
        "MarkImportedItemReviewed": "Mark Imported Item Reviewed",
        "MarkImportedItemTooltip": "Marks this imported item as having been reviewed.",
        "MarkImportsReviewed": "Mark Imports Reviewed",
        "MarkImportsTooltip": "Marks all items on this actor that were imported as having been reviewed.",
        "Marks": "Marks",
        "MatrixAttrAttack": "Attack",
        "MatrixAttrDataProc": "Data Proc.",
        "MatrixAttrFirewall": "Firewall",
        "MatrixAttrSleaze": "Sleaze",
        "MatrixDefense": "Matrix Defense",
        "MatrixFullDefenseAttribute": "Matrix Full Defense Attribute",
        "MatrixNetworkHackingApplication": {
            "Icons": "Icons",
            "Invite": "Ask for invite",
            "Title": "Connect to Network"
        },
        "MatrixTarget": "Matrix Target",
        "MeleeWeaponAttack": "Melee Weapon Attack",
        "MentalLimit": "Mental Limit",
        "Messages": {
            "MarkInvitation": {
                "AcceptInvite": "Accept",
                "AskForInvite": "Asks for an mark invitation for:",
                "InviteAccepted": "Feel free to join {networkName}, {userName}!"
            }
        },
        "Metamagic": "Metamagic",
        "Metamagics": "Metamagics",
        "Metatype": "Metatype",
        "MigrationComplete": "Migration Complete",
        "MigrationUpdateCompendiumNoUpdateActor": "Due to technical limitations within FoundryVTT, actor compendium packs are unable to be updated at this time. You will have to manually update these packs.",
        "MigrationUpdateCompendiumUpdateMessage": "Any world compendium packs that exist in the world were also updated",
        "Migrator": {
            "Version18_0_0": {
                "Line1": "From version 0.18.0 onwards effects on owned items will directly apply without them having to be copied to the actor.",
                "Line2": "Previously copied effects must be deleted or disabled to avoid both item and actor effects applying changes. By default all effects with an item origin will be deleted.",
                "Line3": "Effects created directly on actors aren't affected.",
                "Line4": "Should you heavily use effects and effects modules and aren't sure about 'item owned effects', you set this migration to disable and review your disabled effects. Disabled effects will be marked as such.",
                "Line5": "Also be aware that enabled effects on actor items will now be applied. You'll be able to see all applied effects in the actors effects tab.",
                "OnlyDisable": "Disable Effects only",
                "Warning": "NOTE!"
            }
        },
        "Miscellaneous": "Misc",
        "MissingItemForOpposedTest": "Opposed Test can't be rolled due to the acting item now missing",
        "MissingRessource": {
            "Ammo": "Not enough ammunition to fire",
            "Edge": "No Edge left to consume",
            "Initiative": "Not enough initiative score",
            "SomeAmmo": "Not enough ammunition to fire in selected mode, mode modifiers will be reduced.",
            "SomeAmmoMelee": "Not enough ammunition left to make a melee attack"
        },
        "ModPoints": "Mod Points",
        "Modification": {
            "FIELDS": {
                "type": {
                    "label": "Mod Type",
                    "hint": "Type of Modification"
                },
                "mount_point": {
                    "label": "Mount Point",
                    "hint": "Mount Point on the weapon this attaches to"
                },
                "modification_category": {
                    "label": "Modification Category",
                    "hint": "Category this Modification belongs to"
                },
                "dice_pool": {
                    "label": "Dice Pool",
                    "hint": "Dice Pool Modifier to apply"
                },
                "accuracy": {
                    "label": "Accuracy",
                    "hint": "Accuracy/Limit Modifier to apply"
                },
                "rc": {
                    "label": "Recoil Compensation",
                    "hint": "Recoil Compensation Modifier to apply"
                },
                "conceal": {
                    "label": "Concealability",
                    "hint": "Concealability Modifier to apply"
                },
                "slots": {
                    "label": "Slots",
                    "hint": "Number of Slots (Vehicles) or Points (Drones) this takes up"
                }
            }
        },
        "ModificationCategories": "Modification Categories",
        "ModificationCategory": "Modification Category",
        "ModificationSlots": "Modification Slots",
        "Modified": "Modified",
        "ModifiedArmor": "Mod. Armor",
        "ModifiedDamage": "Mod. Damage",
        "ModifiedDrain": "Mod. Drain",
        "ModifiedFade": "Mod. Fade",
        "Modifier": "Modifier",
        "ModifierTypes": {
            "Armor": "Armor",
            "AstralDice": "Astral Init Dice",
            "AstralInit": "Astral Init",
            "AstralLimit": "Astral Limit",
            "BackgroundCount": "Background Count",
            "Composure": "Composure",
            "ControlRigRating": "Control Rig Rating",
            "Defense": "Defense",
            "DefenseBlock": "Defense (Block)",
            "DefenseDodge": "Defense (Dodge)",
            "DefenseMelee": "Defense (Melee)",
            "DefenseMulti": "Defense (Multi)",
            "DefenseParry": "Defense (Parry)",
            "DefenseRanged": "Defense (Ranged)",
            "DifferentGrid": "Different Grid",
            "Drain": "Drain",
            "Environmental": "Environmental",
            "EnvironmentalLight": "Environmental (Light)",
            "EnvironmentalRange": "Environmental (Range)",
            "EnvironmentalVisibility": "Environmental (Visibility)",
            "EnvironmentalWind": "Environmental (Wind)",
            "Essence": "Essence",
            "Fade": "Fade",
            "Global": "Global",
            "JudgeIntentions": "J.Intentions",
            "LiftCarry": "Lift&Carry",
            "Marks": "Marks",
            "MarkDamage": "Per Mark Damage",
            "MatrixDice": "Matrix Init Dice",
            "MatrixInit": "Matrix Init",
            "MatrixTrack": "Matrix Track",
            "MeatSpaceDice": "Meatspace Init Dice",
            "MeatSpaceInit": "Meatspace Init",
            "Memory": "Memory",
            "MentalLimit": "Mental Limit",
            "Noise": "Noise",
            "PainTolerancePhysical": "Pain Tolerance Physical",
            "PainToleranceStun": "Pain Tolerance Stun",
            "PhysicalLimit": "Physical Limit",
            "PhysicalOverflowTrack": "Physical Overflow Track",
            "PhysicalTrack": "Physical Track",
            "PublicGrid": "Public Grid",
            "Reach": "Reach",
            "Recoil": "Recoil",
            "Run": "Run",
            "Soak": "Soak",
            "SocialLimit": "Social Limit",
            "StunTrack": "Stun Track",
            "TwoMarks": "Two Marks",
            "ThreeMarks": "Three Marks",
            "Walk": "Walk",
            "WoundTolerance": "Wound Tolerance",
            "Wounds": "Wounds"
        },
        "MountPoint": "Mount Point",
        "MoveInventoryDialog": {
            "Cancel": "Cancel",
            "Move": "Move",
            "Title": "Choose an inventory"
        },
        "MoveItemInventory": "Move Item to inventory",
        "Movement": "Movement",
        "MovementTypes": {
            "Run": "Run",
            "Sprint": "Sprint"
        },
        "Mundane": "Mundane",
        "Name": "Name",
        "NetHits": "Net Hits",
        "Network": "Network",
        "Networks": "Networks",
        "New": "New",
        "NoCover": "No Cover",
        "NoSelectableToken": "Actor has no selectable token on canvas",
        "None": "None",
        "Normal": "Normal",
        "NormalSkillButton": "Normal",
        "NormalSpellButton": "Normal",
        "NotExtended": "Not Extended",
        "Notifications": {
            "DeletingStorageReferences": {
                "Start": "Deleting Network and MARK references",
                "Item": "Clearing references to item",
                "Finished": "Finished clearing references"
            },
            "AddDevicesToPAN": {
                "Adding": "Adding",
                "Starting": "Starting to add equipped devices to PAN",
                "FinishedAddingItems": "Finished adding devices to PAN. Please close and reopen any item sheets that changed connections."
            },
            "VehicleCannotBeOwnDriver": "A vehicle cannot be the Driver of itself (that's what Pilot is for)"
        },
        "Notoriety": "Notoriety",
        "Nuyen": "Nuyen",
        "OpenOrigin": "Open item",
        "OpenSource": "Open items source as pdfpager pdf or website",
        "OpposedType": "Type",
        "OpposingHits": "Opposing Hits",
        "OpposingNetHits": "Opposing Net Hits",
        "OriginalDicePool": "Original Dice Pool",
        "OutOfRange": "Out of Range",
        "Overflow": "Overflow",
        "Override": "Override",
        "OverwatchScore": "Overwatch Score",
        "OverwatchScoreTracker": {
            "AddSelect": "Add selected tokens linked actor",
            "CantDeleteUserCharacter": "Player Character can't be removed from the tracker",
            "DeleteScore": "Delete score from tracker",
            "GMOnly": "GOD is tracking your location...",
            "NotifyNoSelectedTokens": "At least one linked token must be selected.",
            "OnlyLinkedActorsSupported": "Only linked actors are supported. Selected tokens with unlinked actors will be ignored.",
            "ResetScore": "Reset Overwatch Score"
        },
        "OverwatchScoreTrackerTitle": "Mr. Johnson's Baby Monitor",
        "Owner": "Owner",
        "PP": "PP",
        "Parry": "Parry",
        "PartialCover": "Partial Cover",
        "Passive": "Passive",
        "Personas": "Personas",
        "PhysicalLimit": "Physical Limit",
        "PhysicalOverflowTrack": "Physical Overflow Track",
        "PhysicalTrack": "Physical Track",
        "PlaceTemplate": "Place Template",
        "PlusFifteenMinutes": "+15min",
        "PowerLevel": "Level",
        "PowerPoints": "PP",
        "PowerType": "Type",
        "Powers": "Powers",
        "Program": {
            "label": "Program",
            "FIELDS": {
                "type": {
                    "label": "Program Type",
                    "hint": "Type of Program, for visual organization only"
                }
            }
        },
        "ProgramType": "Type",
        "Programs": "Programs",
        "PublicAwareness": "Public Awareness",
        "PublicGrid": "Public Grid",
        "PushTheLimit": "Push The Limit",
        "Qty": "Qty",
        "Quality": {
            "label": "Quality",
            "FIELDS": {
                "type": {
                    "label": "Quality Type",
                    "hint": "The Type of Quality this represents (Positive/Negative/Life Module)"
                },
                "karma": {
                    "label": "Karma",
                    "hint": "Amount of Karma this Quality is worth"
                },
                "rating": {
                    "label": "Rating",
                    "hint": "Rating of this Quality"
                }
            }
        },
        "QualityType": "Type",
        "QualityTypeLifeModule": "Life Module",
        "QualityTypeNegative": "Negative",
        "QualityTypePositive": "Positive",
        "Quantity": "Quantity",
        "QuickInfo": {
            "DrainForce": "Drain F{sign}{drain}"
        },
        "Radius": "Radius",
        "Range": "Range",
        "RangeWeaponAttack": "Range Weapon Attack",
        "Rating": "Rating",
        "Reach": "Reach",
        "Reagent": "Reagents",
        "RebootConfirmationDialog": {
            "Cancel": "Cancel",
            "Confirm": "Reboot",
            "Description": "Are you sure you want to reboot this device?",
            "Title": "Confirm Reboot"
        },
        "RecklessSpellButton": "Reckless",
        "Recoil": "Recoil",
        "RecoilCompensation": "Recoil Comp.",
        "Refresh": "Refresh",
        "RemoveBonus": "Remove Bonus",
        "RemoveSpecialization": "Remove Specialization",
        "Resist": "Resist",
        "RestoreDefaultSkills": "Restore Default Skills",
        "RightClickToClear": "Right Click to Clear",
        "Ritual": {
            "FIELDS": {
                "type": {
                    "label": "Ritual Type",
                    "hint": "Type of Ritual to Perform"
                },
                "descriptors": {
                    "label": "Descriptors",
                    "hint": "Descriptors for the Ritual ???"

                }
            }
        },
        "Roll": "Roll",
        "RollArmor": "Armor",
        "RollComposure": "Composure",
        "RollCustom": "Custom",
        "RollDefense": "Defense",
        "RollDrain": "Drain",
        "RollFade": "Fade",
        "RollJudgeIntentions": "J.Intentions",
        "RollLiftCarry": "Lift&Carry",
        "RollMemory": "Memory",
        "RollMode": "Roll Mode",
        "RollOneDie": "You can't roll less than 1 die, chummer",
        "RollSoak": "Damage Resist",
        "RoundsRemaining": "Rounds Remaining",
        "Rtg": "Rtg",
        "RtgAboveZero": "Rtg > 0",
        "Run": "Run",
        "RunningSilent": "Running Silent",
        "RunningSilentControlledByDevice": "Running Silent is controlled by your active Matrix Device:",
        "RunningSpeed": "Running",
        "SIN": "SIN",
        "SameGrid": "Same Grid",
        "SecondAttribute": "Second Attribute",
        "SecondChance": "Second Chance",
        "SelectMatrixNetworkDialog": {
            "Title": "Select a Network",
            "Connect": "Connect",
            "Cancel": "Cancel"
        },
        "SelectTokenMessage": "You must select a token first",
        "SelectedTargets": "Selected Targets",
        "SheetActor": "Actor sheet",
        "SheetItem": "Item sheet",
        "Side": "Side",
        "SituationalModifier": "Situational Mod",
        "SituationalModifiersApplication": {
            "Category": {
                "Magic": "Magic",
                "Matrix": "Matrix",
                "Physical": "Physical"
            },
            "ClearLocalAll": "Remove local modifiers",
            "ClearLocalAllTokens": "Remove all token modifiers on scene",
            "Magic": {
                "BackgroundCount": "Background Count"
            },
            "Matrix": {
                "Noise": "Noise"
            },
            "Title": "Situational Modifiers",
            "Total": "Result"
        },
        "Skill": {
            "AeronauticsMechanic": "Aeronautics Mechanic",
            "Alchemy": "Alchemy",
            "AnimalHandling": "Animal Handling",
            "Arcana": "Arcana",
            "Archery": "Archery",
            "Armorer": "Armorer",
            "Artificing": "Artificing",
            "Artisan": "Artisan",
            "Assensing": "Assensing",
            "AstralCombat": "Astral Combat",
            "Automatics": "Automatics",
            "AutomotiveMechanic": "Automotive Mechanic",
            "Banishing": "Banishing",
            "Binding": "Binding",
            "Biotechnology": "Biotechnology",
            "Blades": "Blades",
            "Chemistry": "Chemistry",
            "Clubs": "Clubs",
            "Compiling": "Compiling",
            "Computer": "Computer",
            "Con": "Con",
            "Counterspelling": "Counterspelling",
            "Cybercombat": "Cybercombat",
            "Cybertechnology": "Cybertechnology",
            "Decompiling": "Decompiling",
            "Demolitions": "Demolitions",
            "Disenchanting": "Disenchanting",
            "Disguise": "Disguise",
            "Diving": "Diving",
            "ElectronicWarfare": "Electronic Warfare",
            "EscapeArtist": "Escape Artist",
            "Etiquette": "Etiquette",
            "ExoticMelee": "Exotic Melee",
            "ExoticRange": "Exotic Range",
            "FirstAid": "First Aid",
            "Flight": "Flight",
            "Forgery": "Forgery",
            "FreeFall": "Free-Fall",
            "Gunnery": "Gunnery",
            "Gymnastics": "Gymnastics",
            "Hacking": "Hacking",
            "Hardware": "Hardware",
            "HeavyWeapons": "Heavy Weapons",
            "Impersonation": "Impersonation",
            "IndustrialMechanic": "Industrial Mechanic",
            "Instruction": "Instruction",
            "Intimidation": "Intimidation",
            "Leadership": "Leadership",
            "Locksmith": "Locksmith",
            "Longarms": "Longarms",
            "Medicine": "Medicine",
            "NauticalMechanic": "Nautical Mechanic",
            "Navigation": "Navigation",
            "Negotiation": "Negotiation",
            "Palming": "Palming",
            "Perception": "Perception",
            "Performance": "Performance",
            "PilotAerospace": "Pilot Aerospace",
            "PilotAircraft": "Pilot Aircraft",
            "PilotExoticVehicle": "Pilot Exotic Vehicle",
            "PilotGroundCraft": "Pilot Ground Craft",
            "PilotWalker": "Pilot Walker",
            "PilotWaterCraft": "Pilot Water Craft",
            "Pistols": "Pistols",
            "Registering": "Registering",
            "RitualSpellcasting": "Ritual Spellcasting",
            "Running": "Running",
            "Skill": "Skill",
            "Skills": "Skills",
            "Sneaking": "Sneaking",
            "Software": "Software",
            "Spellcasting": "Spellcasting",
            "Summoning": "Summoning",
            "Survival": "Survival",
            "Swimming": "Swimming",
            "Teamwork": {
                "Glitched": "Glitched",
                "ParticipantActor": "Choose actor",
                "RollIt": "Roll it",
                "TakePart": "Take part"
            },
            "ThrowingWeapons": "Throwing Weapons",
            "Tracking": "Tracking",
            "UnarmedCombat": "Unarmed Combat"
        },
        "Soak": "Soak",
        "SoakTest": "Damage Resist Test",
        "Social": "Social",
        "SocialLimit": "Social Limit",
        "Source": "Source",
        "SourceFieldEmptyError": "The Source field is empty, please enter valid text for the source",
        "SpareClips": "Spare Clips",
        "SpecialAttributes": "Special Attributes",
        "Specialization": "Specialization",
        "Specializations": "Specializations",
        "Spell": {
            "Attack": "Spell Attack",
            "Cast": "Spell Cast",
            "CatCombat": "Combat",
            "CatDetection": "Detection",
            "CatHealth": "Health",
            "CatIllusion": "Illusion",
            "CatManipulation": "Manipulation",
            "Category": "Category",
            "CombatDirect": "Direct",
            "CombatIndirect": "Indirect",
            "Defense": "Spell Defense",
            "DefenseDirectMana": "Spell Defense (direct, mana)",
            "DefenseDirectPhysical": "Spell Defense (direct, physical)",
            "DetectionArea": "Area",
            "DetectionDirectional": "Directional",
            "DetectionPsychic": "Psychic",
            "IllusionMultiSense": "Multi-Sense",
            "IllusionObvious": "Obvious",
            "IllusionRealistic": "Realistic",
            "IllusionSingleSense": "Single-Sense",
            "ManipulationDamaging": "Damaging",
            "ManipulationEnvironmental": "Environmental",
            "ManipulationMental": "Mental",
            "ManipulationPhysical": "Physical",
            "Range": "Range",
            "RangeLos": "LOS",
            "RangeLosA": "LOS (A)",
            "RangeTouch": "Touch",
            "Spell": "Spell",
            "Spells": "Spells",
            "Type": "Type",
            "TypeMana": "Mana",
            "TypePhysical": "Physical"
        },
        "Spirit": {
            "FIELDS": {
                "spiritType": {
                    "label": "Spirit Type",
                    "hint": "Type of the Spirit"
                },
                "force": {
                    "label": "Force",
                    "hint": "Force of the Spirit"
                },
                "services": {
                    "label": "Services",
                    "hint": "Number of Services the Spirit has"
                },
                "bound": {
                    "label": "Bound",
                    "hint": "If the Spirit is Bound"
                },
                "summonerUuid": {
                    "label": "Summoner",
                    "hint": "Mage who summoned this Spirit"
                }
            },
            "Bound": "Bound",
            "Force": "Force",
            "MissingSummoner": "No active summoner",
            "Services": "Services",
            "Summoner": "Summoner",
            "Type": "Type",
            "Types": {
                "Air": "Air",
                "Aircraft": "Aircraft",
                "Airwave": "Airwave",
                "Ally": "Ally",
                "Anansi": "Anansi",
                "Anarch": "Anarch",
                "Arboreal": "Arboreal",
                "Automotive": "Automotive",
                "Beasts": "Beasts",
                "Blackjack": "Blackjack",
                "BladeSummoned": "Blade-Summoned",
                "Blood": "Blood",
                "BloodShade": "Blood Shade",
                "Boggle": "Boggle",
                "Bone": "Bone",
                "Bugul": "Bugul",
                "Carcass": "Carcass",
                "Caretaker": "Insect Caretaker",
                "Ceramic": "Ceramic",
                "Chindi": "Chindi",
                "CorpsCadavre": "Corps Cadavre",
                "Corpse": "Corpse",
                "Crawler": "Crawler (Demon)",
                "Croki": "Croki",
                "Detritus": "Detritus",
                "Duende": "Duende",
                "Earth": "Earth",
                "Ejerian": "Ejerian",
                "Elvar": "Elvar",
                "Energy": "Energy",
                "Erinyes": "Erinyes",
                "Fire": "Fire",
                "Ghasts": "Ghasts (Demon)",
                "GreenMan": "Green Man",
                "Gremlin": "Gremlin",
                "Guardian": "Guardian",
                "Guidance": "Guidance",
                "GumToad": "Gum Toad (Demon)",
                "Homunculus": "Homunculus",
                "Hopper": "Hopper",
                "HorrorShow": "Horror Show",
                "Imp": "Imp",
                "Jarl": "Jarl",
                "Kappa": "Kappa",
                "Kokopelli": "Kokopelli",
                "Man": "Man",
                "MasterShedim": "MasterShedim",
                "Metal": "Metal",
                "Morbi": "Morbi",
                "Muse": "Muse",
                "Nightmare": "Nightmare",
                "Nocnitsa": "Nocnitsa",
                "Nymph": "Insect Nymph",
                "Palefire": "Palefire",
                "Phantom": "Phantom",
                "Plant": "Plant",
                "Preta": "Preta",
                "Queen": "Insect Queen",
                "Rot": "Rot",
                "Scout": "Insect Scout",
                "Shade": "Shade",
                "Shedim": "Shedim",
                "Ship": "Ship",
                "Soldier": "Insect Soldier",
                "Stabber": "Stabber",
                "Succubus": "Succubus",
                "Task": "Task",
                "ToxicAir": "Noxious",
                "ToxicBeasts": "Abomination",
                "ToxicEarth": "Barren",
                "ToxicFire": "Nuclear",
                "ToxicMan": "Plague",
                "ToxicWater": "Sludge",
                "Train": "Train",
                "TsuchigumoWarrior": "Tsuchigumo Warrior",
                "Tungak": "Tungak",
                "Unbreakable": "Unbreakable",
                "Vrygoths": "Vrygoths",
                "VucubCaquix": "Vucub Caquix",
                "Watcher": "Watcher",
                "Water": "Water",
                "Worker": "Insect Worker",
                "Wraith": "Wraith"
            }
        },
        "Sprite": {
            "FIELDS": {
                "spriteType": {
                    "label": "Sprite Type",
                    "hint": "Type of the Sprite"
                },
                "level": {
                    "label": "Level",
                    "hint": "Level of the Sprite"
                },
                "services": {
                    "label": "Services",
                    "hint": "Number of Services the Sprite has"
                },
                "registered": {
                    "label": "Registered",
                    "hint": "If the Sprite is Registered"
                },
                "technomancerUuid": {
                    "label": "Technomancer",
                    "hint": "Technomancer who compiled this Sprite"
                }
            },
            "Level": "Level",
            "MissingTechnomancer": "No active technomancer",
            "Registered": "Registered",
            "Services": "Services",
            "Technomancer": "Technomancer",
            "Type": "Type",
            "Types": {
                "Companion": "Companion",
                "Courier": "Courier",
                "Crack": "Crack",
                "Data": "Data",
                "Fault": "Fault",
                "Generalist": "Generalist",
                "Machine": "Machine"
            }
        },
        "SpritePower": {
            "IsOptional": "Optionality",
            "Optional": {
                "DisabledOption": "Optional, disabled",
                "EnabledOption": "Optional, enabled",
                "Standard": "By default"
            },
            "Type": "Type"
        },
        "Stock": "Stock",
        "StreetCred": "Street Cred",
        "StunTrack": "Stun Track",
        "Submersion": "Submersion",
        "Successes": "Successes",
        "Summoning": {
            "DropSpirit": "Drop Spirit",
            "FixedSpirit": "Prep. Spirit",
            "SpiritType": "Spirit Type"
        },
        "Suppressing": "Suppressing",
        "Target": "Target",
        "TargetDevice": "Device",
        "TargetFile": "File",
        "TargetOther": "Other",
        "TargetPersona": "Persona",
        "TargetSelf": "Self",
        "TargetSprite": "Sprite",
        "TargetingNeedsActorWithToken": "The current actor needs a linked token for targeting to work",
        "Temporary": "Temporary",
        "TemporaryModifiers": "Temporary Modifiers",
        "Test": "Test",
        "TestResults": {
            "AttackBlockedByHardenedArmor": "Attack Hits But Is Blocked By Hardened Armor",
            "AttackBlockedByVehicleArmor": "Attack Hits But Is Blocked By Vehicle Armor",
            "AttackDodged": "Attack Dodged",
            "AttackDoesNoPhysicalDamageToVehicle": "Attack Hits But Does No Physical Damage To Vehicle",
            "AttackHits": "Attack Hits",
            "AttackResisted": "Attack Resisted",
            "BruteForceFailure": "Brute Force failed!",
            "BruteForceSuccess": "Brute Force successful!",
            "CheckOverwatchScoreSuccess": "Check Overwatch Score successful!",
            "CheckOverwatchScoreFailure": "Check Overwatch Score failed!",
            "Failure": "Failure!",
            "HackOnTheFlyFailure": "Hack on the Fly failed!",
            "HackOnTheFlySuccess": "Hack on the Fly successful!",
            "ResistedAllDamage": "No Damage taken!",
            "ResistedSomeDamage": "Damage taken!",
            "Results": "Results",
            "RitualFailure": "The ritual was to strong for you",
            "RitualSuccess": "The ritual is sealed",
            "SoakBlockedByHardenedArmor": "Blocked By Hardened Armor",
            "SpiritSummonFailure": "Spirit fled!",
            "SpiritSummonSuccess": "Spirit summoned!",
            "SpriteCompilationFailure": "Sprite fled!",
            "SpriteCompilationSuccess": "Sprite compiled!",
            "Success": "Success!"
        },
        "Tests": {
            "AttributeOnlyTest": "Attribute-Only Test",
            "BiofeedbackResistTest": "Biofeedback Resist",
            "BruteForceTest": "Brute Force",
            "CheckOverwatchScoreTest": "Check Overwatch Score",
            "CombatSpellDefenseTest": "Combat Spell Defense",
            "CompileSpriteTest": "Compile Sprite",
            "ComplexFormTest": "Threading Complex Form",
            "DrainTest": "Drain Test",
            "DroneInfiltrationTest": "Drone Infiltration Test",
            "DronePerceptionTest": "Drone Perception Test",
            "ExtendedTest": "Extended Test",
            "FadeTest": "Fade Test",
            "HackOnTheFlyTest": "Hack on the Fly",
            "MatrixDefenseTest": "Matrix Defense",
            "MatrixResistTest": "Matrix Damage Resist",
            "MatrixTest": "Matrix Test",
            "MeleeAttackTest": "Melee Weapon Attack",
            "NaturalRecoveryPhysicalTest": "Natural Recovery Physical",
            "NaturalRecoveryStunTest": "Natural Recovery Stun",
            "OpposedBruteForceTest": "Oppose Brute Force",
            "OpposedCheckOverwatchScoreTest": "Oppose Check Overwatch Score",
            "OpposedCompileSpriteTest": "Oppose Compilation",
            "OpposedHackOnTheFlyTest": "Oppose Hack On The Fly",
            "OpposedRitualTest": "Seal the Ritual",
            "OpposedSummonSpiritTest": "Oppose Summoning",
            "OpposedTest": "Opposed Test",
            "PhysicalDefenseTest": "Physical Defense",
            "PhysicalResistTest": "Physical Damage Resist",
            "PilotVehicleTest": "Pilot Vehicle Test",
            "RangedAttackTest": "Ranged Weapon Attack",
            "RitualSpellcastingTest": "Ritual Spellcasting",
            "SkillTest": "Skill Test",
            "SpellCastingTest": "Spellcasting",
            "SuccessTest": "Success Test",
            "SummonSpiritTest": "Summon Spirit",
            "SuppressionDefenseTest": "Suppression Defense",
            "ThrownAttackTest": "Thrown Weapon Attack"
        },
        "Threshold": "Threshold",
        "ToggleActive": "Toggle Active",
        "ToggleEquip": "Toggle Equipped",
        "ToggleWireless": "Toggle Wireless",
        "Tooltips": {
            "ToggleEditMode": "Toggle Edit Mode",
            "Actor": {
                "ConnectNetwork": "Enter this host/grid",
                "DisconnectNetwork": "Leave this host/grid",
                "MarkTarget": "Place additional marks on this target",
                "Metatype": "As NPC the metatype will also apply attribute quick modifiers",
                "MissingSummoner": "Drag&Drop Character or use summoning action",
                "MissingTechnomancer": "Drag&Drop Character or use compilation action",
                "PlaceMark": "Action to be used to place marks on already marked targets",
                "ResetActorForNewRun": "Reset damage, edge, etc. for a new run",
                "MatrixConnectionToggle": "Change Matrix Connection status: Augmented Reality, Cold Sim, or Hot Sim",
                "MatrixRunningSilentToggle": "Change your matrix device between Running Silent and Displaying your Persona",
                "PickControlledTokenAsDriver": "Pick the currently Controlled Token Actor as the Driver",
                "RebootPersonaAndClearAllMarks": "Reboot your Persona and clear all Marks you have placed",
                "SetupPAN": "Add all Equipped Wireless Devices to this character's Persona"
            },
            "Actor.DefaultCategoryVisibility": "Show item categories even if no item has been added to them",
            "CallInAction": {
                "ActorType": "Type of actor to call in"
            },
            "CompilationTest": {
                "Level": "Level of the compiled sprite",
                "PreparedSprite": "Use a prepared sprite actor instead of creating a generic one",
                "SpriteType": "Type of the compiled sprite"
            },
            "Contact": {
                "LinkActor": "Drag&Drop an actor to link him to this contact"
            },
            "Effect": {
                "AlterApplyToWithChanges": "Remove changes before changing what the effect applies to.",
                "ApplyTo": "Changes of this effect will apply to this target only",
                "PriorityFieldDisabled": "Custom priority is not supported at this time",
                "DocumentEffects": "Effects directly on this document",
                "ItemEffects": "Effects collected from items on this document",
                "OnlyAllFilteredUsed": "This effect will only apply for tests matching all selections",
                "OnlyFilteredUsed": "This effect will only apply for tests matching at least one selection",
                "OnlyForItemTest": "Only affect test of parent item",
                "OnlyForWireless": "This effect will apply only for items that have wireless enabled"
            },
            "Item": {
                "ActionCategories": "Select action categories to use instead of the test's default categories. Using Active Effects you can use categories to modify test values",
                "ActionModifier": "Select pool modifiers to use instead of test's default modifiers",
                "ActionRollMode": "Default roll mode when casting this action. Will overwrite global chat setting",
                "AmmoReplaceDamage": "Set to replace weapon damage instead of modifying it",
                "AvailabilityAdjustment": "Adjust actual availability based on the item rating",
                "CostAdjustment": "Adjust actual cost based on the item rating",
                "DisabledForPreparedActor": "Disabled due to use of prepared actor"
            },
            "RangedAttack": {
                "Recoil": "Progressive Recoil",
                "RecoilAfterAttack": "Progressive Recoil including this attack",
                "RecoilBeforeAttack": "Progressive Recoil now, before attacking",
                "RecoilCompensation": "Total RC, including actor and item RC",
                "ResetRecoil": "Reset progressive recoil to none"
            },
            "Ritual": {
                "Force": "Force of the ritual",
                "ReagentDrams": "Drams of reagents used for altering drain"
            },
            "SituationalModifier": {
                "Recoil": "Amount of bullets fired"
            },
            "SummoningTest": {
                "DragOnCanvas": "Drag spirit on canvas",
                "Force": "Force of the summoned spirit",
                "PreparedSpirit": "Use a prepared spirit actor instead of creating a generic one",
                "ReagentDrams": "Drams of reagents used for altering summoning limit",
                "SpiritType": "Type of the summoned spirit"
            },
            "Test": {
                "Extended": "Test will be thrown as an extended test until threshold is reached",
                "Limit": "Calculated limit value",
                "ManualGlitches": "Amount of glitches from manually thrown dice pool. Must be used together with manual hits.",
                "ManualHits": "Amount of hits from manually thrown dice pool. Will skip FoundryVTT dice throw.",
                "Modifier": "Sum of all modifiers applied to dice pool",
                "Pool": "Amount of dice to roll",
                "PushTheLimit": "Apply push the limit edge rules",
                "RollMode": "FoundryVTT chat message roll visibility",
                "Threshold": "Calculated threshold value"
            }
        },
        "Top": "Top",
        "Total": "Total",
        "Tours": {
            "CharacterImport": {
                "Description": "This Tour will give you an overview how to import a chummer character. For details look into https://github.com/SR5-FoundryVTT/SR5-FoundryVTT/wiki/Chummer-Character-Import",
                "GeneralContent": "To import a character you need the export json from chummer 5e.",
                "GeneralTitle": "Importing a character",
                "Title": "Character Import"
            },
            "ConditionMonitor": {
                "ApplyDamageContent": "To apply damage left click a cell. All cells up to this cell including will be filled. If more cells where filled all cells to the right will not be filled anymore. Right clicking any cell will remove all damage from the monitor.",
                "ApplyDamageTitle": "Applying and removing Damage",
                "Description": "This tour will give you an overview how the condition monitor work.",
                "GeneralContent": "These are your conditions monitors. They consist of several cells. In certain cells you can see a written number. If these cells are filled your wound modifier is increased to this number. The wound modifiers of all monitors are added",
                "GeneralTitle": "Condition Monitor",
                "RecoveryContent": "Clicking on the label of a condition monitor will prompt an extended recovery test. The result of the recovery test will be automatically applied to the monitor.",
                "RecoveryTitle": "Recovery Tests",
                "Title": "Condition Monitor Tour",
                "WoundModifierContent": "This cell denotes that filling it increases your wound modifier by the number written in the cell",
                "WoundModifierTitle": "Wound Modifier"
            }
        },
        "UnderBarrel": "Under Barrel",
        "UseEdgeForInitiativeRoll": "Use edge rule blitz for initiative",
        "Value": "Value",
        "Vehicle": {
            "FIELDS": {
                "control_mode": {
                    "label": "Control Mode"
                },
                "isDrone": {
                    "label": "Is Drone?",
                    "hint": "If this vehicle is a Drone"
                },
                "isOffRoad": {
                    "label": "Is Off Road?",
                    "hint": "If this vehicle is currently Off Road"
                },
                "vehicleType": {
                    "label": "Vehicle Type",
                    "hint": "Type of the Vehicle"
                }
            },
            "ChaseEnvironment": "Chase Environment",
            "Clearsight": "Clearsight",
            "ControlMode": "Control Mode",
            "ControlModes": {
                "Autopilot": "Autopilot",
                "Manual": "Manual",
                "Remote": "Remote",
                "Rigger": "Rigger"
            },
            "Driver": "Driver",
            "Drone": "Drone",
            "Environments": {
                "Handling": "Handling",
                "Speed": "Speed"
            },
            "IsDrone": "Is Drone",
            "IsOffRoad": "Is Off Road",
            "Maneuvering": "Maneuvering",
            "MissingDriver": "Drag&Drop an actor or Pick a token as a driver",
            "ModificationCategoryTypes": {
                "body": "Body",
                "cosmetic": "Cosmetic",
                "electromagnetic": "Electromagnetic",
                "power_train": "Power Train",
                "protection": "Protection",
                "weapons": "Weapons"
            },
            "Stats": {
                "Acceleration": "Acceleration",
                "Handling": "Handling",
                "OffRoadHandling": "Handling (Off Road)",
                "OffRoadSpeed": "Speed (Off Road)",
                "Pilot": "Pilot",
                "Seats": "Seats",
                "Sensor": "Sensor",
                "Speed": "Speed"
            },
            "Stealth": "Stealth",
            "Type": "Type",
            "Types": {
                "Aerospace": "Space Craft",
                "Air": "Air Craft",
                "Exotic": "Exotic Craft",
                "Ground": "Ground Craft",
                "Walker": "Walker",
                "Water": "Water Craft"
            },
            "Vehicle": "Vehicle"
        },
        "VehicleImport": {
            "MissingPermission": "You are missing the permission to create actors"
        },
        "Vision": {
            "AstralPerception": "Astral Perception",
            "AugmentedReality": "Augmented Reality",
            "LowLight": "Low-Light Vision",
            "ThermographicVision": "Thermographic Vision"
        },
        "Walk": "Walk",
        "WalkingSpeed": "Walking",
        "Warnings": {
            "AlreadyExistingInventory": "An inventory with this name already exists",
            "AlreadyJoinedNetwork": "{name} already joined this network",
            "BulkImportPerformanceWarning": "If you imported a large number of items, Foundry may run slowly until you refresh your browser. It is recommended to refresh now.",
            "CantEditDefaultInventory": "The default inventory can't be renamed",
            "CantExtendTest": "Test type can't be extended.",
            "CantExtendTestFurther": "Test can't be extended either by dice left or threshold reached",
            "CantRecoverPhysicalWithStunDamage": "Cant recover from physical damage with stun damage still present",
            "CantReloadAtAllDueToAmmo": "You have no ammo left!",
            "CantReloadFullyDueToAmmo": "You didn't have enough ammo to fully reload!",
            "CantReloadPartialDueToAmmo": "You didn't have enough ammo for a complex reload action!",
            "CantReloadWithoutSpareClip": "You're out of spare clips!",
            "CantSecondChanceAGlitch": "Can't second chance this test. Test result is glitched.",
            "CantSecondChanceWithoutNoneHits": "Can't second chance this test. Only hit-dice left.",
            "CantSpendMulitplePointsOfEdge": "Can't spend multiple points of edge on one test or action",
            "CompilationNotConcluded": "Compilation incomplete. Wait for sprite to oppose compilation to determine fade.",
            "EdgeRulesCantBeAppliedOnTestsWithoutAnActor": "Edge points can't be spent on tests without actors",
            "HostItemOnlyAcceptIC": "Only IC actors can be added to hosts",
            "InvalidCompilationLevel": "Resonance attribute to low for this sprite level",
            "InvalidMarksCount": "You've trying to place a strange number of marks",
            "InvalidSummoningForce": "Force value chosen doesn't adhere to the rules",
            "NegativeLimitValue": "Limit values must positive numbers",
            "NoFireModeConfigured": "Ranged weapon has no firemode configured. Will use single shot.",
            "OnlyGMCanDoThis": "Only a GM user can do this",
            "RitualInvalidForce": "Ritual force is invalid or greater then your lodges rating.",
            "RitualNotConcluded": "Ritual incomplete. Wait for ritual to oppose spellcasting to determine drain.",
            "RitualNotEnoughReagents": "Not enough reagents offered.",
            "SkillCantBeDefault": "This skill can't be rolled as it can't be defaulted",
            "SummoningNotConcluded": "Summoning incomplete. Wait for spirit to oppose summoning to determine drain.",
            "TokenSelectionNeeded": "One or more tokens need to be selected"
        },
        "Weapon": {
            "AmmoCount": "Ammo Count",
            "Category": {
                "Melee": "Melee",
                "Range": "Range",
                "Thrown": "Thrown"
            },
            "Cliptype": {
                "BeltFed": "Belt Fed",
                "Bow": "Bow",
                "BreakAction": "Break Action",
                "Cylinder": "Cylinder",
                "Drum": "Drum",
                "InternalMagazin": "Internal Magazin",
                "MuzzleLoader": "Muzzle Loader",
                "RemovableClip": "Removable Clip"
            },
            "FullReload": "Full",
            "Mod": "Mod",
            "Mode": {
                "BurstFire": "BF",
                "BurstFireLong": "BF-LB",
                "BurstFireShort": "BF",
                "FullAuto": "FA",
                "FullAutoLong": "FA-L",
                "FullAutoShort": "FA",
                "Modes": "Modes",
                "SemiAuto": "SA",
                "SemiAutoBurst": "SA-BF",
                "SemiAutoShort": "SA",
                "SingleShot": "SS",
                "SingleShotShort": "SS"
            },
            "Mods": "Mods",
            "PartialReload": "Partial",
            "Range": {
                "Category": {
                    "AerodynamicThrownGrenade": "Aerodynamic Grenade",
                    "AssaultCannon": "Assault Cannon",
                    "AssaultRifle": "Assault Rifle",
                    "Bow": "Bow",
                    "Flamethrower": "Flamethrower",
                    "GrenadeLauncher": "Grenade Launcher",
                    "HarpoonGun": "Harpoon Gun",
                    "HarpoonGunUnderwater": "Harpoon Gun (Underwater)",
                    "HeavyCrossbow": "Heavy Crossbow",
                    "HeavyPistol": "Heavy Pistol",
                    "HoldOutPistol": "Hold-Out Pistol",
                    "LightCrossbow": "Light Crossbow",
                    "LightMachinegun": "Light Machinegun",
                    "LightPistol": "Light Pistol",
                    "MachinePistol": "Machine Pistol",
                    "Manual": "Manual",
                    "MediumCrossbow": "Medium Crossbow",
                    "MediumHeavyMachinegun": "Medium/Heavy Machinegun",
                    "MissileLauncher": "Missile Launcher",
                    "Net": "Net",
                    "SMG": "SMG",
                    "ShotgunFlechette": "Shotgun (flechette)",
                    "ShotgunSlug": "Shotgun (slug)",
                    "Shuriken": "Shuriken",
                    "SniperRifle": "Sniper Rifle",
                    "SportingRifle": "Sporting Rifle",
                    "StandardThrownGrenade": "Standard Grenade",
                    "Taser": "Taser",
                    "ThrownKnife": "Thrown Knife"
                },
                "Extreme": "Extreme",
                "Long": "Long",
                "Medium": "Medium",
                "Ranges": "Ranges",
                "Short": "Short"
            },
            "Reach": "Reach",
            "Reload": "Reload",
            "Type": "Type",
            "Weapon": "Weapon"
        },
        "Wireless": "Wireless",
        "WirelessOnline": "Online",
        "WirelessOffline": "Offline",
        "WirelessUnavailable": "Unavailable"
    },
    "TYPES": {
        "Actor": {
            "character": "Character",
            "critter": "Critter (deprecated)",
            "ic": "IC",
            "spirit": "Spirit",
            "sprite": "Sprite",
            "vehicle": "Vehicle/Drone"
        },
        "Item": {
            "action": "Action",
            "adept_power": "Adept Power",
            "ammo": "Ammunition",
            "armor": "Armor",
            "bioware": "Bioware",
            "call_in_action": "Summon/Compile",
            "complex_form": "Complex Form",
            "contact": "Contact",
            "critter_power": "Critter Power",
            "cyberware": "Cyberware",
            "device": "Device",
            "echo": "Echo",
            "equipment": "Equipment",
            "grid": "Grid",
            "host": "Host",
            "lifestyle": "Lifestyle",
            "metamagic": "Metamagic",
            "modification": "Gear Modification",
            "program": "Program",
            "quality": "Quality",
            "ritual": "Ritual",
            "sin": "SIN",
            "spell": "Spell",
            "sprite_power": "Sprite Power",
            "vehicle": "Vehicle",
            "weapon": "Weapon"
        }
    }
}
